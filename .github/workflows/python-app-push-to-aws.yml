# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: CI/CD Pipeline

on:
  push:
    branches: [ "*" ]  # Run on all branches
    tags: [ "v*" ]     # Run on version tags
  pull_request:
    branches: [ "*" ]  # Run on PRs to all branches

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        pip install build twine

    - name: Lint with ruff
      run: |
        ruff check

    - name: Test with pytest
      run: |
        pytest -v --cov=file_encoder --cov-report=xml --cov-report=term-missing | tee pytest-output.txt

    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: matrix.python-version == '3.13'
      with:
        name: test-results-python-${{ matrix.python-version }}
        path: |
          pytest-output.txt
          coverage.xml
        retention-days: 30

    - name: Build package
      if: matrix.python-version == '3.13'
      run: |
        python -m build

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      if: matrix.python-version == '3.13'
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Upload wheel to S3
      if: matrix.python-version == '3.13'
      run: |
        for file in dist/*.whl; do
          if [ -f "$file" ]; then
            aws s3 cp "$file" s3://${{ secrets.S3_BUCKET_NAME }}/wheels/
          fi
        done

    - name: Publish to CodeArtifact
      if: matrix.python-version == '3.13'
      run: |
        # Get CodeArtifact authentication token
        export CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token \
          --domain tiasmith-domain \
          --query authorizationToken \
          --output text \
          --region us-west-2)
        
        # Get repository endpoint
        export CODEARTIFACT_REPOSITORY_URL=$(aws codeartifact get-repository-endpoint \
          --domain tiasmith-domain \
          --repository github-actions-repo \
          --format pypi \
          --query repositoryEndpoint \
          --output text \
          --region us-west-2)
        
        # Upload the package
        twine upload --repository-url $CODEARTIFACT_REPOSITORY_URL \
          --username aws \
          --password $CODEARTIFACT_AUTH_TOKEN \
          dist/*.whl
